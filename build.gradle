group 'com.shengsiyuan'
version '1.0'

//task的第三方引入,插件式
apply plugin: 'java'
apply plugin: 'com.google.protobuf'

//因为gradle本身也是groovy语言,所以脚本一开始要为gradle准备执行环境
buildscript {
    //gradle脚本的依赖.
    repositories {
        //手动指定阿里云
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        //https://bintray.com/bintray/jcenter
        jcenter()
        //https://search.maven.org/
        mavenCentral()
    }
    //gradle执行的依赖,需要classpath指定 => 改变generateProto时文件位置
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }
}


//设置源和目标的编译级别
sourceCompatibility = 1.8
targetCompatibility = 1.8

//项目本身的依赖
repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    jcenter()
    mavenCentral()
}


//依赖: 项目本身的依赖
dependencies {
    //编译测试时需要的依赖
    testCompile(
//            compile group: 'junit', name: 'junit', version: '4.12'
            "junit:junit:4.12"
    )
    compile(
            "junit:junit:4.12",
            'io.netty:netty-all:4.1.34.Final',
            'com.google.protobuf:protobuf-java:3.7.0',
            'com.google.protobuf:protobuf-java-util:3.7.0',
            'org.apache.thrift:libthrift:0.12.0',
            'io.grpc:grpc-netty-shaded:1.19.0',
            'io.grpc:grpc-protobuf:1.19.0',
            'io.grpc:grpc-stub:1.19.0'
    )
}
//idea启动的时候读取系统环境变量,修改后需要重启idea
//当前项目创建一个wrapper包,并且指定版本 + 使用gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
    distributionType = 'all'
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.6.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.19.0'
        }
    }
//    message目录
    generateProtoTasks.generatedFilesBaseDir = "src"

    generateProtoTasks {
        all()*.plugins {
            grpc {
                // grpc目录(方法目录)
                // "$generatedFilesBaseDir/$sourceSet/grpcjava"
                setOutputSubDir 'java'
            }
        }
    }
}

